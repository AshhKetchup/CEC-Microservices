Compose can now delegate builds to bake for better performance.
 To do so, set COMPOSE_BAKE=true.
#0 building with "default" instance using docker driver

#1 [product internal] load build definition from Dockerfile
#1 transferring dockerfile: 632B done
#1 DONE 0.0s

#2 [product internal] load metadata for docker.io/library/golang:1.24-alpine
#2 DONE 1.6s

#3 [product internal] load metadata for docker.io/library/alpine:latest
#3 DONE 1.6s

#4 [product internal] load .dockerignore
#4 transferring context: 2B done
#4 DONE 0.0s

#5 [product builder 1/5] FROM docker.io/library/golang:1.24-alpine@sha256:7772cb5322baa875edd74705556d08f0eeca7b9c4b5367754ce3f2f00041ccee
#5 CACHED

#6 [product stage-1 1/3] FROM docker.io/library/alpine:latest@sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c
#6 CACHED

#7 [product internal] load build context
#7 transferring context: 46.30kB done
#7 DONE 0.0s

#8 [product builder 2/5] RUN GRPC_HEALTH_PROBE_VERSION=v0.4.21 &&     wget -qO/bin/grpc_health_probe https://github.com/grpc-ecosystem/grpc-health-probe/releases/download/${GRPC_HEALTH_PROBE_VERSION}/grpc_health_probe-linux-amd64 &&     chmod +x /bin/grpc_health_probe
#8 DONE 4.5s

#9 [product builder 3/5] WORKDIR /app
#9 DONE 0.0s

#10 [product builder 4/5] COPY . .
#10 DONE 0.0s

#11 [product builder 5/5] RUN CGO_ENABLED=0 GOOS=linux go build -o product-service ./services/product
#11 0.255 stat /app/services/product: directory not found
#11 ERROR: process "/bin/sh -c CGO_ENABLED=0 GOOS=linux go build -o product-service ./services/product" did not complete successfully: exit code: 1
------
 > [product builder 5/5] RUN CGO_ENABLED=0 GOOS=linux go build -o product-service ./services/product:
0.255 stat /app/services/product: directory not found
------
