version: '3'

services:
  api-gateway:
      build: ./services/api-gateway
      container_name: api-gateway
      ports:
        - "8080:8080"
      depends_on:
        - product
      networks:
        - app-network
  # auth:
  #   build: ./services/auth
  #   container_name: auth
  #   ports:
  #     - "50051:50051"
  #   environment:
  #     - DB_HOST=mysql
  #     - DB_PORT=3306
  #     - DB_USER=auth_user
  #     - DB_PASSWORD=authpass
  #     - DB_NAME=auth_db
  #     - JWT_SECRET=secretkey
  #     - JWT_EXPIRATION_HOURS=24
  #     - JWT_ISSUER=cec-auth-service
  #   depends_on:
  #     mysql:
  #       condition: service_healthy
  #   networks:
  #     - app-network

  product:
    build: ./services/product
    container_name: product-service
    ports:
      - "50052:50052"
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=product_user
      - DB_PASSWORD=productpass
      - DB_NAME=product_db
    depends_on:
      - mysql
    networks:
      - app-network

#   order:
#     build: ./services/order
#     ports:
#       - "50053:50053"
#     environment:
#       - DB_HOST=mysql-db
#       - DB_PORT=3306
#       - DB_USER=app_user
#       - DB_PASSWORD=app_password
#       - DB_NAME=order_db
#     depends_on:
#       - product
#       - mysql-db
#     networks:
#       - app-network

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
    ports:
      - "3306:3306"
    volumes:
      - ./services/mysql:/docker-entrypoint-initdb.d   
    networks:
      - app-network

# volumes:
#   mysql-data:

networks:
  app-network:
    driver: bridge